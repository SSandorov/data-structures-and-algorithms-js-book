https://cathyatseneca.gitbooks.io/data-structures-and-algorithms/content/tables/quadratic_probing_and_double_hashing.html

Quadratic Probing is similar to Linear probing. The difference is that if you were
to try to insert into a space that is filled you would first check 1^2 = 11
​2
​​ =1 element away then 2^2 = 42
​2
​​ =4 elements away, then 3^2 =93
​2
​​ =9 elements away then 4^2=164
​2
​​ =16 elements away and so on.

With linear probing we know that we will always find an open spot if one exists
(It might be a long search but we will find it). However, this is not the case with
quadratic probing unless you take care in the choosing of the table size. For example
consider what would happen in the following situation:

Table size is 16. First 5 pieces of data that all hash to index 2

First piece goes to index 2.
Second piece goes to 3 ((2 + 1)%16
Third piece goes to 6 ((2+4)%16
Fourth piece goes to 11((2+9)%16
Fifth piece doesn't get inserted because (2+16)%16==2 which is full so we end up back where we started and we haven't searched all empty spots.

In order to guarantee that your quadratic probes will hit every single available spots eventually, your table size must meet these requirements:
* Be a prime number
* never be more than half full (even by one element)


https://research.cs.vt.edu/AVresearch/hashing/quadratic.php

Unfortunately, quadratic probing has the disadvantage that typically not all hash table slots
will be on the probe sequence. Using p(K, i) = i2 gives particularly inconsistent results. For
many hash table sizes, this probe function will cycle through a relatively small number of slots.
If all slots on that cycle happen to be full, this means that the record cannot be inserted at
all! For example, if our hash table has three slots, then records that hash to slot 0 can probe
only to slots 0 and 1 (that is, the probe sequence will never visit slot 2 in the table). Thus,
if slots 0 and 1 are full, then the record cannot be inserted even though the table is not full!
A more realistic example is a table with 105 slots. The probe sequence starting from any given slot
will only visit 23 other slots in the table. If all 24 of these slots should happen to be full,
even if other slots in the table are empty, then the record cannot be inserted because the probe
sequence will continually hit only those same 24 slots.

